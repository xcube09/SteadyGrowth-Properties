@using Microsoft.AspNetCore.Identity
@using SteadyGrowth.Web.Models.Entities
@using Microsoft.EntityFrameworkCore;
@using MediatR;
@using SteadyGrowth.Web.Application.Queries.Academy;
@using SteadyGrowth.Web.Services.Interfaces;
@inject UserManager<User> _userManager
@inject IMediator _mediator
@inject ICurrentUserService _currentUserService
@inject IReferralService _referralService
@{
    Layout = null;
    User? currentUser = null;
    string referralLink = "";
    string referralCode = "";
    IList<AcademyPackage> availablePackages = new List<AcademyPackage>();

    if (_currentUserService.IsAuthenticated())
    {
        currentUser = await _currentUserService.GetCurrentUserWithDetailsAsync(includeWallet: false, includePackage: true);
        availablePackages = await _mediator.Send(new GetAvailableAcademyPackagesQuery());
        
        // Get referral code - generate if doesn't exist
        if (currentUser != null)
        {
            if (string.IsNullOrEmpty(currentUser.ReferralCode))
            {
                // Get referral stats which will auto-generate the code if needed
                var stats = await _referralService.GetReferralStatsAsync(currentUser.Id);
                referralCode = stats?.ReferralCode ?? "";
            }
            else
            {
                referralCode = currentUser.ReferralCode;
            }
            
            // Generate referral link after getting the code
            referralLink = Url.PageLink("/Register", pageHandler: null, protocol: "https", host: Context.Request.Host.ToString(), values: new { area = "Identity", referrerId = referralCode });
        }
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <title>@ViewData["Title"] - SteadyGrowth Membership</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" href="~/favicon.ico" />
    <!--begin::Fonts-->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Inter:300,400,500,600,700" />
    <!--end::Fonts-->
    <!--begin::Global Stylesheets Bundle(used by all pages)-->
    <link href="~/themes/metronic/v8_2/assets/plugins/global/plugins.bundle.css" rel="stylesheet" type="text/css" />
    <link href="~/themes/metronic/v8_2/assets/css/style.bundle.css" rel="stylesheet" type="text/css" />
    <!--end::Global Stylesheets Bundle-->
    <!--begin::SteadyGrowth Logo Theme Override-->
    <link href="~/css/logo-theme-override.css" rel="stylesheet" type="text/css" />
    <!--end::SteadyGrowth Logo Theme Override-->
    <!--begin::SweetAlert2-->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!--end::SweetAlert2-->
</head>
<body id="kt_app_body" data-kt-app-layout="dark-sidebar" data-kt-app-header-fixed="true" data-kt-app-sidebar-enabled="true" data-kt-app-sidebar-fixed="true" data-kt-app-sidebar-hoverable="true" data-kt-app-sidebar-push-header="true" data-kt-app-sidebar-push-toolbar="true" data-kt-app-sidebar-push-footer="true" data-kt-app-toolbar-enabled="true" class="app-default">
    <div class="d-flex flex-column flex-root app-root" id="kt_app_root">
        <div class="app-page flex-column flex-column-fluid" id="kt_app_page">
            <!--begin::Header-->
            <div id="kt_app_header" class="app-header">
                <div class="app-container container-fluid d-flex align-items-stretch justify-content-between" id="kt_app_header_container">
                    <div class="d-flex align-items-center d-lg-none ms-n3 me-1 me-md-2" title="Show sidebar menu">
                        <div class="btn btn-icon btn-active-color-primary w-35px h-35px" id="kt_app_sidebar_mobile_toggle">
                            <i class="ki-duotone ki-abstract-14 fs-2 fs-md-1"><span class="path1"></span><span class="path2"></span></i>
                        </div>
                    </div>
                    <div class="d-flex align-items-center flex-grow-1 flex-lg-grow-0">
                        <a href="/" class="d-lg-none">
                            <img alt="Logo" src="~/themes/metronic/v8_2/assets/media/logos/default-small.svg" class="h-30px" />
                        </a>
                    </div>
                    <div class="d-flex align-items-stretch justify-content-end flex-lg-grow-1" id="kt_app_header_wrapper">
                        <div class="app-navbar flex-shrink-0">
                            <div class="app-navbar-item ms-1 ms-md-3" id="kt_header_user_menu_toggle">
                                <div class="cursor-pointer symbol symbol-35px symbol-md-40px" data-kt-menu-trigger="click" data-kt-menu-attach="parent" data-kt-menu-placement="bottom-end">
                                    <img src="@(currentUser != null && !string.IsNullOrEmpty(currentUser.ProfilePictureUrl) ? "/images/profilepictures/" + currentUser.ProfilePictureUrl : "/themes/metronic/v8_2/assets/media/avatars/blank.png")" alt="user" />
                                </div>
                                <div class="menu menu-sub menu-sub-dropdown menu-column menu-rounded menu-gray-800 menu-state-bg menu-state-color fw-semibold py-4 fs-6 w-275px" data-kt-menu="true">
                                    <div class="menu-item px-3">
                                        <div class="menu-content d-flex align-items-center px-3">
                                            <div class="symbol symbol-50px me-5">
                                                <img alt="user" src="@(currentUser != null && !string.IsNullOrEmpty(currentUser.ProfilePictureUrl) ? "/images/profilepictures/" + currentUser.ProfilePictureUrl : "/themes/metronic/v8_2/assets/media/avatars/blank.png")" />
                                            </div>
                                            <div class="d-flex flex-column">
                                                <div class="fw-bold d-flex align-items-center fs-5 text-truncate" data-bs-toggle="tooltip" data-bs-placement="top" title="@(currentUser?.FirstName + " " + currentUser?.LastName)">@((currentUser?.FirstName + " " + currentUser?.LastName)?.Length > 12 ? (currentUser?.FirstName + " " + currentUser?.LastName)?.Substring(0, 12) + "..." : (currentUser?.FirstName + " " + currentUser?.LastName))</div>
                                                <a href="#" class="fw-semibold text-muted text-hover-primary fs-7 text-truncate" data-bs-toggle="tooltip" data-bs-placement="top" title="@currentUser?.Email">@(currentUser?.Email?.Length > 12 ? currentUser?.Email?.Substring(0, 12) + "..." : currentUser?.Email)</a>
                                                @if (currentUser?.AcademyPackage != null)
                                                {
                                                    <span class="badge badge-light-info mt-1">@currentUser.AcademyPackage.Name</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                    <div class="separator my-2"></div>
                                    <div class="menu-item px-5">
                                        <a asp-area="Membership" asp-page="/Profile/Index" class="menu-link px-5">My Profile</a>
                                    </div>
                                    <div class="menu-item px-5">
                                        <a href="#" class="menu-link px-5" data-bs-toggle="modal" data-bs-target="#referralLinkModal">Referral Link</a>
                                    </div>
                                    @if (currentUser != null && (currentUser.AcademyPackage == null || currentUser.AcademyPackage.Name != "Premium Package"))
                                    {
                                        <div class="menu-item px-5">
                                            <a href="#" class="menu-link px-5" data-bs-toggle="modal" data-bs-target="#upgradePackageModal">Upgrade to Premium</a>
                                        </div>
                                    }
                                    <div class="menu-item px-5">
                                        <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="/" method="post">
                                            <button type="submit" class="btn btn-sm btn-light-primary menu-link px-5">Sign Out</button>
                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!--end::Header-->
            <!--begin::Wrapper-->
            <div class="app-wrapper flex-column flex-row-fluid" id="kt_app_wrapper">
                <!--begin::Sidebar-->
                <div id="kt_app_sidebar" class="app-sidebar flex-column" data-kt-drawer="true" data-kt-drawer-name="app-sidebar" data-kt-drawer-activate="{default: true, lg: false}" data-kt-drawer-overlay="true" data-kt-drawer-width="225px" data-kt-drawer-direction="start" data-kt-drawer-toggle="#kt_app_sidebar_mobile_toggle">
                    <div class="app-sidebar-logo px-6" id="kt_app_sidebar_logo">
                        <a href="/">
                            <img alt="Logo" src="~/images/logo.png" class="h-25px app-sidebar-logo-default" />
                            <img alt="Logo" src="~/images/logo_black.png" class="h-20px app-sidebar-logo-minimize" />
                        </a>
                        <div id="kt_app_sidebar_toggle" class="app-sidebar-toggle btn btn-icon btn-shadow btn-sm btn-color-muted btn-active-color-primary body-bg h-30px w-30px position-absolute top-50 start-100 translate-middle rotate" data-kt-toggle="true" data-kt-toggle-state="active" data-kt-toggle-target="body" data-kt-toggle-name="app-sidebar-minimize">
                            <i class="ki-duotone ki-double-left fs-2 rotate-180"><span class="path1"></span><span class="path2"></span></i>
                        </div>
                    </div>
                    <div class="app-sidebar-menu overflow-hidden flex-column-fluid">
                        <div id="kt_app_sidebar_menu_wrapper" class="app-sidebar-wrapper hover-scroll-overlay-y my-5" data-kt-scroll="true" data-kt-scroll-activate="true" data-kt-scroll-height="auto" data-kt-scroll-dependencies="#kt_app_sidebar_logo, #kt_app_sidebar_footer" data-kt-scroll-wrappers="#kt_app_sidebar_menu" data-kt-scroll-offset="5px" data-kt-scroll-save-state="true">
                            <div class="menu menu-column menu-rounded menu-sub-indention px-3" id="#kt_app_sidebar_menu" data-kt-menu="true" data-kt-menu-expand="false">
                                <!-- Menu items will go here -->
                                <div class="menu-item"><a class="menu-link" asp-area="Membership" asp-page="/Dashboard/Index"><span class="menu-icon"><i class="ki-duotone ki-element-11 fs-2"><span class="path1"></span><span class="path2"></span><span class="path3"></span><span class="path4"></span></i></span><span class="menu-title">Dashboard</span></a></div>
                                <div class="menu-item"><a class="menu-link" asp-area="Membership" asp-page="/Properties/Index"><span class="menu-icon"><i class="ki-duotone ki-home fs-2"></i></span><span class="menu-title">Properties</span></a></div>
                                <div class="menu-item"><a class="menu-link" asp-area="Membership" asp-page="/Profile/Index"><span class="menu-icon"><i class="ki-duotone ki-user fs-2"><span class="path1"></span><span class="path2"></span></i></span><span class="menu-title">Profile</span></a></div>
                                <div data-kt-menu-trigger="click" class="menu-item menu-accordion">
                                    <span class="menu-link">
                                        <span class="menu-icon">
                                            <i class="ki-duotone ki-wallet fs-2"><span class="path1"></span><span class="path2"></span></i>
                                        </span>
                                        <span class="menu-title">Wallet</span>
                                        <span class="menu-arrow"></span>
                                    </span>
                                    <div class="menu-sub menu-sub-accordion">
                                        <div class="menu-item">
                                            <a class="menu-link" asp-area="Membership" asp-page="/Wallet/Index"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">My Wallet</span></a>
                                        </div>
                                        <div class="menu-item">
                                            <a class="menu-link" asp-area="Membership" asp-page="/Wallet/WithdrawalRequest"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">Withdrawal Request</span></a>
                                        </div>
                                    </div>
                                </div>
                                <div class="menu-item"><a class="menu-link" asp-area="Membership" asp-page="/Referrals/Index"><span class="menu-icon"><i class="ki-duotone ki-user-square fs-2"><span class="path1"></span><span class="path2"></span><span class="path3"></span><span class="path4"></span></i></span><span class="menu-title">Referrals</span></a></div>
                                <div data-kt-menu-trigger="click" class="menu-item menu-accordion">
                                    <span class="menu-link">
                                        <span class="menu-icon">
                                            <i class="ki-duotone ki-book fs-2"><span class="path1"></span><span class="path2"></span><span class="path3"></span><span class="path4"></span></i>
                                        </span><span class="menu-title">Academy</span><span class="menu-arrow"></span>
                                    </span>
                                    <div class="menu-sub menu-sub-accordion">
                                        <div class="menu-item">
                                            <a class="menu-link" asp-area="Membership" asp-page="/Academy/Courses"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">Courses</span></a>
                                        </div>
                                        <div class="menu-item"><a class="menu-link" asp-area="Membership" asp-page="/Academy/MyProgress"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">My Progress</span></a></div><div class="menu-item"><a class="menu-link" asp-area="Membership" asp-page="/Academy/Resources"><span class="menu-bullet"><span class="bullet bullet-dot"></span></span><span class="menu-title">Resources</span></a></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!--end::Sidebar-->
                <!--begin::Main-->
                <div class="app-main flex-column flex-row-fluid" id="kt_app_main">
                    <div class="d-flex flex-column flex-column-fluid">
                        <div id="kt_app_toolbar" class="app-toolbar py-3 py-lg-6">
                            <div id="kt_app_toolbar_container" class="app-container container-fluid d-flex flex-stack">
                                <div class="page-title d-flex flex-column justify-content-center flex-wrap me-3">
                                    <h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">@ViewData["Title"]</h1>
                                    <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                                        <li class="breadcrumb-item text-muted"><a href="/" class="text-muted text-hover-primary">Home</a></li>
                                        <li class="breadcrumb-item"><span class="bullet bg-gray-400 w-5px h-2px"></span></li>
                                        @if (ViewData["Breadcrumb"] != null)
                                        {
                                            foreach (var (text, url) in (List<(string, string)>)ViewData["Breadcrumb"])
                                            {
                                                <li class="breadcrumb-item text-muted"><a href="@url" class="text-muted text-hover-primary">@text</a></li>
                                                <li class="breadcrumb-item"><span class="bullet bg-gray-400 w-5px h-2px"></span></li>
                                            }
                                        }
                                        <li class="breadcrumb-item text-dark">@ViewData["Title"]</li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div id="kt_app_content" class="app-content flex-column-fluid">
                            <div id="kt_app_content_container" class="app-container container-fluid">
                                @RenderBody()
                            </div>
                        </div>
                    </div>
                    <!--begin::Footer-->
                    <div id="kt_app_footer" class="app-footer">
                        <div class="app-container container-fluid d-flex flex-column flex-md-row flex-center flex-md-stack py-3">
                            <div class="text-dark order-2 order-md-1">
                                <span class="text-muted fw-semibold me-1">@DateTime.Now.Year&copy;</span>
                                <a href="#" target="_blank" class="text-gray-800 text-hover-primary">SteadyGrowth</a>
                            </div>
                        </div>
                    </div>
                    <!--end::Footer-->
                </div>
                <!--end:::Main-->
            </div>
            <!--end::Wrapper-->
        </div>
    </div>
    <!-- Referral Link Modal -->
    <div class="modal fade" id="referralLinkModal" tabindex="-1" aria-labelledby="referralLinkModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="referralLinkModalLabel">Your Referral Link</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" id="referralLinkInput" value="@referralLink" readonly>
                        <button class="btn btn-primary" type="button" id="copyReferralLinkButton">Copy Link</button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>




    <!-- Upgrade Package Modal -->
    <div class="modal fade" id="upgradePackageModal" tabindex="-1" aria-labelledby="upgradePackageModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="upgradePackageModalLabel">Upgrade to Premium Academy</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="upgradeRequestForm">
                    <div class="modal-body">
                        <p>You are about to upgrade to the Premium Academy Package. This package costs $@(availablePackages?.FirstOrDefault(p => p.Name == "Premium Package")?.Price.ToString("N2") ?? "0.00").</p>
                        <input type="hidden" id="requestedPackageId" value="@(availablePackages?.FirstOrDefault(p => p.Name == "Premium Package")?.Id ?? 0)" />
                        <div class="mb-3">
                            <label for="paymentMethod" class="form-label">Payment Method</label>
                            <select class="form-select" id="paymentMethod" name="paymentMethod">
                                <option value="Bank Transfer">Bank Transfer</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="paymentDetails" class="form-label">Payment Details (e.g., Transaction ID)</label>
                            <textarea class="form-control" id="paymentDetails" name="paymentDetails" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary" id="submitUpgradeRequest">Submit Upgrade Request</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!--end::Global Javascript Bundle(used by all pages)-->
    <script src="~/themes/metronic/v8_2/assets/plugins/global/plugins.bundle.js"></script>
    <script src="~/themes/metronic/v8_2/assets/js/scripts.bundle.js"></script>
    <!--end::Global Javascript Bundle-->
    @await RenderSectionAsync("Scripts", required: false)
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var currentUrl = window.location.pathname;
            var menuLinks = document.querySelectorAll(".menu-link");

            menuLinks.forEach(function (link) {
                if (link.getAttribute("href") === currentUrl) {
                    link.classList.add("active");

                    var parentMenuItem = link.closest(".menu-item.menu-accordion");
                    if (parentMenuItem) {
                        parentMenuItem.classList.add("show");
                    }
                }
            });

            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            })

            // Initialize Metronic components if needed
            if (typeof KTApp !== 'undefined') {
                KTApp.init();
            }

            // Copy referral link to clipboard
            document.getElementById('copyReferralLinkButton').addEventListener('click', function () {
                var referralLinkInput = document.getElementById('referralLinkInput');
                referralLinkInput.select();
                referralLinkInput.setSelectionRange(0, 99999); // For mobile devices
                document.execCommand('copy');

                // Optional: Provide user feedback
                var originalButtonText = this.textContent;
                this.textContent = 'Copied!';
                setTimeout(() => {
                    this.textContent = originalButtonText;
                }, 2000);
            });

            // Handle upgrade request form submission
            const upgradeForm = document.getElementById('upgradeRequestForm');
            if (upgradeForm) {
                upgradeForm.addEventListener('submit', async function (e) {
                    e.preventDefault();
                    console.log('Upgrade request form submitted');

                    const submitButton = document.getElementById('submitUpgradeRequest');
                    if (!submitButton) {
                        console.error('Submit button not found');
                        return;
                    }

                    // Add loading state
                    submitButton.setAttribute("data-kt-indicator", "on");
                    submitButton.disabled = true;
                    const originalButtonText = submitButton.textContent;
                    submitButton.textContent = 'Submitting...';

                    try {
                        const form = e.target;
                        const formData = new FormData(form);
                        const requestedPackageIdElement = document.getElementById('requestedPackageId');
                        
                        if (!requestedPackageIdElement) {
                            throw new Error('Package ID not found');
                        }
                        
                        const requestedPackageId = parseInt(requestedPackageIdElement.value);
                        
                        // Validate package ID
                        if (!requestedPackageId || requestedPackageId === 0) {
                            throw new Error('Invalid package selected. Please refresh the page and try again.');
                        }

                        const paymentMethod = formData.get('paymentMethod');
                        const paymentDetails = formData.get('paymentDetails');

                        // Validate required fields
                        if (!paymentMethod) {
                            throw new Error('Please select a payment method.');
                        }

                        const data = {
                            requestedPackageId: requestedPackageId,
                            paymentMethod: paymentMethod,
                            paymentDetails: paymentDetails || ''
                        };

                        console.log('Submitting upgrade request with data:', data);

                        const response = await fetch('/api/UpgradeRequestApi', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                            },
                            body: JSON.stringify(data)
                        });

                        console.log('Response status:', response.status);
                        console.log('Response headers:', response.headers);

                        if (response.ok) {
                            const result = await response.json();
                            console.log('Success response:', result);
                            
                            // Use Swal if available, otherwise fallback to alert
                            if (typeof Swal !== 'undefined') {
                                await Swal.fire('Success!', 'Upgrade request submitted successfully.', 'success');
                            } else {
                                alert('Success! Upgrade request submitted successfully.');
                            }
                            
                            // Hide modal
                            const modal = bootstrap.Modal.getInstance(document.getElementById('upgradePackageModal'));
                            if (modal) {
                                modal.hide();
                            }
                            
                            // Refresh page to show updated status
                            window.location.reload();
                        } else {
                            let errorMessage = 'Failed to submit upgrade request.';
                            
                            try {
                                const errorData = await response.json();
                                console.error('API Error Response:', errorData);
                                errorMessage = errorData.title || errorData.message || errorMessage;
                                if (errorData.errors) {
                                    errorMessage += ' Details: ' + JSON.stringify(errorData.errors);
                                }
                            } catch (parseError) {
                                console.error('Error parsing error response:', parseError);
                                const errorText = await response.text();
                                console.error('Raw error response:', errorText);
                                errorMessage = `Server returned ${response.status}: ${response.statusText}`;
                            }
                            
                            // Use Swal if available, otherwise fallback to alert
                            if (typeof Swal !== 'undefined') {
                                Swal.fire('Error!', errorMessage, 'error');
                            } else {
                                alert('Error: ' + errorMessage);
                            }
                        }
                    } catch (error) {
                        console.error('Request Error:', error);
                        const errorMessage = error.message || 'An unexpected error occurred.';
                        
                        // Use Swal if available, otherwise fallback to alert
                        if (typeof Swal !== 'undefined') {
                            Swal.fire('Error!', errorMessage, 'error');
                        } else {
                            alert('Error: ' + errorMessage);
                        }
                    } finally {
                        // Reset button state
                        submitButton.removeAttribute("data-kt-indicator");
                        submitButton.disabled = false;
                        submitButton.textContent = originalButtonText;
                    }
                });
            } else {
                console.log('Upgrade request form not found on this page');
            }
        });
    </script>
</body>
</html> 