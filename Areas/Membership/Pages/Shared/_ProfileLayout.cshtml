@using SteadyGrowth.Web.Models.Entities
@using Microsoft.AspNetCore.Identity
@using SteadyGrowth.Web.Services.Interfaces
@inject UserManager<User> UserManager
@inject IUserService _userService

@{
    Layout = "_MembershipLayout";
    var user = await _userService.GetUserByIdAsync(UserManager.GetUserId(User));
}

<div class="card mb-5 mb-xl-10">
    <div class="card-body pt-9 pb-0">
        <!--begin::Details-->
        <div class="d-flex flex-wrap flex-sm-nowrap mb-3">
            <!--begin: Pic-->
            <div class="me-7 mb-4">
                <div class="symbol symbol-100px symbol-lg-160px symbol-fixed position-relative">
                    <img src="@(string.IsNullOrEmpty(user?.ProfilePictureUrl) ? "/themes/metronic/v8_2/assets/media/avatars/blank.png" : "/images/profilepictures/" + user?.ProfilePictureUrl)" alt="image" />
                </div>
            </div>
            <!--end::Pic-->
            <!--begin::Info-->
            <div class="flex-grow-1">
                <!--begin::Title-->
                <div class="d-flex justify-content-between align-items-start flex-wrap mb-2">
                    <!--begin::User-->
                    <div class="d-flex flex-column">
                        <!--begin::Name-->
                        <div class="d-flex align-items-center mb-2">
                            <a href="#" class="text-gray-900 text-hover-primary fs-2 fw-bold me-1">@user.FirstName @user.LastName</a>
                            <a href="#">
                                <i class="ki-duotone ki-verify fs-1 text-primary">
                                    <span class="path1"></span>
                                    <span class="path2"></span>
                                </i>
                            </a>
                        </div>
                        <!--end::Name-->
                        <!--begin::Info-->
                        <div class="d-flex flex-wrap fw-semibold fs-6 mb-4 pe-2">
                            <a href="#" class="d-flex align-items-center text-gray-400 text-hover-primary me-5 mb-2">
                                <i class="ki-duotone ki-profile-circle fs-4 me-1">
                                    <span class="path1"></span>
                                    <span class="path2"></span>
                                    <span class="path3"></span>
                                </i>
                                @(user.AcademyPackage?.Name ?? "No Package")
                            </a>
                            <a href="#" class="d-flex align-items-center text-gray-400 text-hover-primary mb-2">
                                <i class="ki-duotone ki-sms fs-4 me-1">
                                    <span class="path1"></span>
                                    <span class="path2"></span>
                                </i>
                                @user.Email
                            </a>
                        </div>
                        <!--end::Info-->
                    </div>
                    <!--end::User-->
                </div>
                <!--end::Title-->
            </div>
            <!--end::Info-->
        </div>
        <!--end::Details-->
        <!--begin::Navs-->
        <div class="d-flex overflow-auto h-55px">
            <ul class="nav nav-stretch nav-line-tabs nav-line-tabs-2x border-transparent fs-5 fw-bold">
                <li class="nav-item mt-2">
                    <a class="nav-link text-active-primary ms-0 me-10 py-5 @(ViewData["ActiveTab"] as string == "Profile" ? "active" : "")" href="/Membership/Profile">Profile</a>
                </li>
                <li class="nav-item mt-2">
                    <a class="nav-link text-active-primary ms-0 me-10 py-5 @(ViewData["ActiveTab"] as string == "KYC" ? "active" : "")" href="/Membership/Profile/KYC">KYC</a>
                </li>
            </ul>
        </div>
        <!--begin::Navs-->
    </div>
</div>

<div class="card mb-5 mb-xl-10">
    <div class="card-body">
        @RenderBody()
    </div>
</div>

@section Scripts {
    @await RenderSectionAsync("Scripts", required: false)
}
