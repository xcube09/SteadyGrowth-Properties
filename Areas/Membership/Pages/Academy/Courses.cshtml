@page
@model SteadyGrowth.Web.Areas.Membership.Pages.Academy.CoursesModel
@{
    ViewData["Title"] = "Courses";
}

<div class="d-flex flex-wrap flex-stack pb-7">
    <div class="d-flex flex-wrap align-items-center my-1">
        <h3 class="fw-semibold me-5 my-1">Courses (@(Model.Courses?.TotalCount ?? 0))</h3>
    </div>
</div>

<div class="row g-6 g-xl-9">
    @if (Model.Courses != null && Model.Courses.Items.Any())
    {
        @foreach (var course in Model.Courses.Items)
        {
            <div class="col-md-4">
                <div class="card h-100">
                    <div class="card-body d-flex justify-content-center text-center flex-column p-8">
                        <a href="#" class="text-gray-800 text-hover-primary d-flex flex-column flex-grow-1 mb-5">
                            <h4 class="fw-bold">@course.Title</h4>
                            <span class="fs-7 fw-semibold text-gray-400">@course.Description</span>
                        </a>
                        <div class="pt-0">
                            @{ 
                                var progress = Model.UserCourseProgress.GetValueOrDefault(course.Id);
                                if (progress == null)
                                {
                                    <form method="post" asp-page-handler="StartCourse">
                                        <input type="hidden" name="courseId" value="@course.Id" />
                                        <button type="submit" class="btn btn-light-primary fw-bold fs-6 px-4 py-2">Start Course</button>
                                    </form>
                                }
                                else
                                {
                                    <div class="d-flex flex-column w-100">
                                        <div class="d-flex justify-content-between mb-2">
                                            <span class="text-muted fs-6 fw-semibold">Progress</span>
                                            <span class="text-muted fs-6 fw-semibold">@((int)((double)progress.CompletedLessonsCount / course.TotalLessons * 100))%</span>
                                        </div>
                                        <div class="progress h-6px w-100">
                                            <div class="progress-bar bg-primary" role="progressbar" style="width: @((int)((double)progress.CompletedLessonsCount / course.TotalLessons * 100))%;" aria-valuenow="@((int)((double)progress.CompletedLessonsCount / course.TotalLessons * 100))" aria-valuemin="0" aria-valuemax="100"></div>
                                        </div>
                                        <a href="#" class="btn btn-light-success fw-bold fs-6 px-4 py-2 mt-3">Continue Course</a>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="col-12">
            <div class="alert alert-info">
                No courses available.
            </div>
        </div>
    }
</div>

@if (Model.Courses != null && Model.Courses.TotalPages > 1)
{
    <div class="d-flex flex-stack flex-wrap pt-10">
        <ul class="pagination">
            @if (Model.Courses.HasPreviousPage)
            {
                <li class="page-item previous">
                    <a asp-page="./Courses" asp-route-pageIndex="@(Model.PageIndex - 1)" class="page-link">
                        <i class="previous"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item previous disabled">
                    <span class="page-link">
                        <i class="previous"></i>
                    </span>
                </li>
            }

            @{
                var startPage = Math.Max(1, Model.PageIndex - 2);
                var endPage = Math.Min(Model.Courses.TotalPages, Model.PageIndex + 2);
            }

            @if (startPage > 1)
            {
                <li class="page-item">
                    <a asp-page="./Courses" asp-route-pageIndex="1" class="page-link">1</a>
                </li>
                @if (startPage > 2)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                if (i == Model.PageIndex)
                {
                    <li class="page-item active">
                        <span class="page-link">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a asp-page="./Courses" asp-route-pageIndex="@i" class="page-link">@i</a>
                    </li>
                }
            }

            @if (endPage < Model.Courses.TotalPages)
            {
                @if (endPage < Model.Courses.TotalPages - 1)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
                <li class="page-item">
                    <a asp-page="./Courses" asp-route-pageIndex="@Model.Courses.TotalPages" class="page-link">@Model.Courses.TotalPages</a>
                </li>
            }

            @if (Model.Courses.HasNextPage)
            {
                <li class="page-item next">
                    <a asp-page="./Courses" asp-route-pageIndex="@(Model.PageIndex + 1)" class="page-link">
                        <i class="next"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item next disabled">
                    <span class="page-link">
                        <i class="next"></i>
                    </span>
                </li>
            }
        </ul>
    </div>
}