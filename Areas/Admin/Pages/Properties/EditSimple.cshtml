@page "{id:int}"
@model SteadyGrowth.Web.Areas.Admin.Pages.Properties.EditSimpleModel
@{
    ViewData["Title"] = "Edit Property";
}

@Html.AntiForgeryToken()

<div class="card mb-5 mb-xl-10">
    <div class="card-header border-0 cursor-pointer">
        <div class="card-title m-0">
            <h3 class="fw-bold m-0">Edit Property: @Model.Property?.Title</h3>
            <div class="text-muted fs-6 mt-1">
                Status: <span class="badge @(GetStatusBadgeClass((SteadyGrowth.Web.Models.Entities.PropertyStatus)Model.Property?.Status))">@Model.Property?.Status</span>
                | Created: @Model.Property?.CreatedAt.ToString("MMM dd, yyyy")
            </div>
        </div>
        <div class="card-toolbar">
            <a asp-page="./Index" class="btn btn-light-primary">
                <i class="ki-duotone ki-arrow-left fs-2"></i>Back to Properties
            </a>
        </div>
    </div>
    
    <div class="collapse show">
        <form method="post" class="form" enctype="multipart/form-data">
            <input type="hidden" asp-for="Command.Id" />
            
            <div class="card-body border-top p-9">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-6"></div>

                <!-- Basic Information Section -->
                <div class="mb-10">
                    <h4 class="fw-bold text-dark mb-7">
                        <i class="ki-duotone ki-information fs-2 text-primary me-2">
                            <span class="path1"></span>
                            <span class="path2"></span>
                            <span class="path3"></span>
                        </i>
                        Basic Information
                    </h4>
                    
                    <div class="row mb-6">
                        <label asp-for="Command.Title" class="col-lg-4 col-form-label required fw-semibold fs-6">Property Title</label>
                        <div class="col-lg-8">
                            <input asp-for="Command.Title" class="form-control form-control-lg form-control-solid mb-3 mb-lg-0" placeholder="Enter property title" />
                            <span asp-validation-for="Command.Title" class="text-danger"></span>
                        </div>
                    </div>
                    
                    <div class="row mb-6">
                        <label asp-for="Command.Description" class="col-lg-4 col-form-label required fw-semibold fs-6">Description</label>
                        <div class="col-lg-8">
                            <textarea asp-for="Command.Description" class="form-control form-control-lg form-control-solid" rows="5" placeholder="Describe the property features, amenities, and highlights"></textarea>
                            <span asp-validation-for="Command.Description" class="text-danger"></span>
                        </div>
                    </div>
                    
                    <div class="row mb-6">
                        <div class="col-lg-4">
                            <label asp-for="Command.Price" class="col-form-label required fw-semibold fs-6">Price (NGN)</label>
                        </div>
                        <div class="col-lg-8">
                            <div class="row">
                                <div class="col-md-6">
                                    <input asp-for="Command.Price" type="number" step="0.01" class="form-control form-control-lg form-control-solid" placeholder="0.00" />
                                    <span asp-validation-for="Command.Price" class="text-danger"></span>
                                </div>
                                <div class="col-md-6">
                                    <input asp-for="Command.Location" class="form-control form-control-lg form-control-solid" placeholder="Property address or area" />
                                    <span asp-validation-for="Command.Location" class="text-danger"></span>
                                    <label asp-for="Command.Location" class="form-label required fw-semibold fs-7 text-muted mt-1">Location</label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="separator separator-dashed my-10"></div>

                <!-- Property Details Section -->
                <div class="mb-10">
                    <h4 class="fw-bold text-dark mb-7">
                        <i class="ki-duotone ki-home fs-2 text-success me-2">
                            <span class="path1"></span>
                            <span class="path2"></span>
                        </i>
                        Property Details
                    </h4>
                    
                    <div class="row mb-6">
                        <div class="col-lg-4">
                            <label class="col-form-label fw-semibold fs-6">Property Settings</label>
                            <div class="text-muted fs-7">Type, status, and availability</div>
                        </div>
                        <div class="col-lg-8">
                            <div class="row">
                                <div class="col-md-4">
                                    <label asp-for="Command.PropertyType" class="form-label required fw-semibold fs-6">Property Type</label>
                                    <select asp-for="Command.PropertyType" class="form-select form-select-lg form-select-solid">
                                        <option value="0">Residential</option>
                                        <option value="1">Commercial</option>
                                        <option value="2">Land</option>
                                        <option value="3">Mixed</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label asp-for="Command.Status" class="form-label fw-semibold fs-6">Status</label>
                                    <select asp-for="Command.Status" class="form-select form-select-lg form-select-solid">
                                        <option value="0">Draft</option>
                                        <option value="1">Pending</option>
                                        <option value="2">Approved</option>
                                        <option value="3">Rejected</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <label class="form-label fw-semibold fs-6">Active Status</label>
                                    <div class="form-check form-switch form-check-custom form-check-solid mt-3">
                                        <input asp-for="Command.IsActive" class="form-check-input" type="checkbox" />
                                        <label class="form-check-label fw-semibold text-muted">Property is active</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row mb-6">
                        <label asp-for="Command.Features" class="col-lg-4 col-form-label fw-semibold fs-6">Features</label>
                        <div class="col-lg-8">
                            <textarea asp-for="Command.Features" class="form-control form-control-lg form-control-solid" rows="3" placeholder='["Swimming Pool", "Parking", "Garden", "Security"]'></textarea>
                            <div class="text-muted fs-7">Enter property features as a JSON array</div>
                        </div>
                    </div>
                </div>

                <div class="separator separator-dashed my-10"></div>

                <!-- Existing Images Section -->
                @if (Model.Property?.ExistingImages.Any() == true)
                {
                    <div class="mb-10">
                        <h4 class="fw-bold text-dark mb-7">
                            <i class="ki-duotone ki-picture fs-2 text-info me-2">
                                <span class="path1"></span>
                                <span class="path2"></span>
                            </i>
                            Current Images (@Model.Property.ExistingImages.Count)
                        </h4>
                        
                        <div class="row" id="existing-images-grid">
                            @foreach (var (image, index) in Model.Property.ExistingImages.Select((img, i) => (img, i)))
                            {
                                <div class="col-lg-3 col-md-4 col-sm-6 mb-6" id="image-@image.Id">
                                    <div class="card card-flush border border-gray-300">
                                        <div class="card-header pt-5">
                                            <div class="card-title d-flex flex-column">
                                                <span class="fs-6 fw-bold text-gray-800">Image @(index + 1)</span>
                                                <span class="text-muted pt-1 fw-semibold fs-7">@image.ImageType</span>
                                            </div>
                                            <div class="card-toolbar">
                                                <button type="button" class="btn btn-sm btn-icon btn-color-danger btn-active-light-danger delete-image-btn" data-image-id="@image.Id" title="Delete Image">
                                                    <i class="ki-duotone ki-trash fs-4">
                                                        <span class="path1"></span>
                                                        <span class="path2"></span>
                                                        <span class="path3"></span>
                                                        <span class="path4"></span>
                                                        <span class="path5"></span>
                                                    </i>
                                                </button>
                                            </div>
                                        </div>
                                        <div class="card-body pt-0">
                                            <div class="rounded-3 overflow-hidden mb-3">
                                                <img src="/images/properties/@image.FileName" alt="@image.Caption" class="w-100" style="height: 120px; object-fit: cover;" />
                                            </div>
                                            <input type="hidden" name="Command.ExistingImages[@index].Id" value="@image.Id" />
                                            <div class="mb-2">
                                                <label class="form-label fs-7 fw-semibold">Caption</label>
                                                <input type="text" name="Command.ExistingImages[@index].Caption" value="@image.Caption" class="form-control form-control-sm form-control-solid" />
                                            </div>
                                            <div class="mb-2">
                                                <label class="form-label fs-7 fw-semibold">Type</label>
                                                <input type="text" name="Command.ExistingImages[@index].ImageType" value="@image.ImageType" class="form-control form-control-sm form-control-solid" />
                                            </div>
                                            <input type="hidden" name="Command.ExistingImages[@index].DisplayOrder" value="@image.DisplayOrder" />
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="separator separator-dashed my-10"></div>
                }

                <!-- Add New Images Section -->
                <div class="mb-10">
                    <h4 class="fw-bold text-dark mb-7">
                        <i class="ki-duotone ki-add-files fs-2 text-warning me-2">
                            <span class="path1"></span>
                            <span class="path2"></span>
                            <span class="path3"></span>
                        </i>
                        Add New Images
                    </h4>
                    
                    <div id="new-image-container">
                        <!-- New image fields will be added here by JavaScript -->
                    </div>
                    <button type="button" id="add-image-field" class="btn btn-light-primary mt-3">
                        <i class="ki-duotone ki-plus fs-2"></i>Add Image
                    </button>
                </div>
            </div>
            
            <!-- Form Actions -->
            <div class="card-footer d-flex justify-content-end py-6 px-9">
                <a asp-page="./Index" class="btn btn-light btn-active-light-primary me-2">Cancel</a>
                <button type="submit" class="btn btn-primary" id="save-property">
                    <span class="indicator-label">
                        <i class="ki-duotone ki-check fs-2 me-2"></i>Update Property
                    </span>
                    <span class="indicator-progress">Please wait...
                        <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                    </span>
                </button>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            let newImageIndex = 0;

            // Add new image field functionality
            function addNewImageField() {
                const container = document.getElementById('new-image-container');
                const newField = document.createElement('div');
                newField.classList.add('new-image-field', 'mb-6', 'p-6', 'border', 'border-dashed', 'border-gray-300', 'rounded');
                newField.innerHTML = `
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="mb-0 text-gray-800">New Image #${newImageIndex + 1}</h5>
                        <button type="button" class="btn btn-sm btn-light-danger remove-new-image-field">
                            <i class="ki-duotone ki-cross fs-4"></i>Remove
                        </button>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-4">
                            <label for="NewImages_${newImageIndex}__ImageFile" class="form-label required fw-semibold">Image File</label>
                            <input type="file" name="NewImages[${newImageIndex}].ImageFile" id="NewImages_${newImageIndex}__ImageFile" class="form-control" accept="image/*" />
                        </div>
                        <div class="col-md-6 mb-4">
                            <label for="NewImages_${newImageIndex}__DisplayOrder" class="form-label fw-semibold">Display Order</label>
                            <input type="number" name="NewImages[${newImageIndex}].DisplayOrder" id="NewImages_${newImageIndex}__DisplayOrder" class="form-control" value="${newImageIndex + 1}" />
                        </div>
                        <div class="col-md-6 mb-4">
                            <label for="NewImages_${newImageIndex}__Caption" class="form-label fw-semibold">Caption</label>
                            <input type="text" name="NewImages[${newImageIndex}].Caption" id="NewImages_${newImageIndex}__Caption" class="form-control" placeholder="Image description" />
                        </div>
                        <div class="col-md-6 mb-4">
                            <label for="NewImages_${newImageIndex}__ImageType" class="form-label fw-semibold">Image Type</label>
                            <select name="NewImages[${newImageIndex}].ImageType" id="NewImages_${newImageIndex}__ImageType" class="form-select">
                                <option value="">Select type</option>
                                <option value="Main">Main</option>
                                <option value="Interior">Interior</option>
                                <option value="Exterior">Exterior</option>
                                <option value="Amenity">Amenity</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                    </div>
                `;
                container.appendChild(newField);

                newField.querySelector('.remove-new-image-field').addEventListener('click', function () {
                    newField.remove();
                    updateNewImageIndices();
                });

                newImageIndex++;
            }

            function updateNewImageIndices() {
                const imageFields = document.querySelectorAll('.new-image-field');
                imageFields.forEach((field, index) => {
                    field.querySelector('h5').textContent = `New Image #${index + 1}`;
                    field.querySelectorAll('input, select').forEach(input => {
                        const nameAttr = input.getAttribute('name');
                        const idAttr = input.getAttribute('id');
                        if (nameAttr) {
                            input.setAttribute('name', nameAttr.replace(/NewImages\[\d+\]/, `NewImages[${index}]`));
                        }
                        if (idAttr) {
                            input.setAttribute('id', idAttr.replace(/NewImages_\d+__/, `NewImages_${index}__`));
                        }
                    });
                });
                newImageIndex = imageFields.length;
            }

            // Handle existing image deletion
            document.addEventListener('click', function(e) {
                if (e.target.closest('.delete-image-btn')) {
                    e.preventDefault();
                    const button = e.target.closest('.delete-image-btn');
                    const imageId = button.getAttribute('data-image-id');
                    const imageCard = button.closest('[id^="image-"]');
                    
                    if (confirm('Are you sure you want to delete this image? This action cannot be undone.')) {
                        // Add hidden input to track deletion
                        const hiddenInput = document.createElement('input');
                        hiddenInput.type = 'hidden';
                        hiddenInput.name = 'Command.ImagesToDelete[]';
                        hiddenInput.value = imageId;
                        document.querySelector('form').appendChild(hiddenInput);
                        
                        // Visual feedback
                        imageCard.style.opacity = '0.5';
                        imageCard.style.position = 'relative';
                        
                        const overlay = document.createElement('div');
                        overlay.className = 'position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center bg-danger bg-opacity-75 text-white fw-bold';
                        overlay.textContent = 'WILL BE DELETED';
                        overlay.style.zIndex = '10';
                        
                        imageCard.appendChild(overlay);
                        button.disabled = true;
                    }
                }
            });

            // Event listeners
            document.getElementById('add-image-field').addEventListener('click', addNewImageField);

            // Form submission handling
            document.getElementById('save-property').addEventListener('click', function(e) {
                const button = e.target.closest('button');
                button.setAttribute('data-kt-indicator', 'on');
                button.disabled = true;
            });
        });
    </script>
    @await Html.PartialAsync("_ValidationScriptsPartial")
}

@functions {
    private string GetStatusBadgeClass(SteadyGrowth.Web.Models.Entities.PropertyStatus status) => status switch {
        SteadyGrowth.Web.Models.Entities.PropertyStatus.Draft => "badge-light-secondary",
        SteadyGrowth.Web.Models.Entities.PropertyStatus.Pending => "badge-light-warning",
        SteadyGrowth.Web.Models.Entities.PropertyStatus.Approved => "badge-light-success",
        SteadyGrowth.Web.Models.Entities.PropertyStatus.Rejected => "badge-light-danger",
        _ => "badge-light-info",
    };
}