@page
@model SteadyGrowth.Web.Areas.Admin.Pages.Properties.IndexModel
@{
    ViewData["Title"] = "Properties";
    Layout = "_AdminLayout";
}

<h1>Properties</h1>

<!-- Advanced Filtering -->
<form class="row g-3 mb-3" method="get">
    <div class="col-md-3">
        <input type="text" class="form-control" name="search" placeholder="Search by title, user, or location" />
    </div>
    <div class="col-md-2">
        <select class="form-select" name="status">
            <option value="">All Statuses</option>
            <option value="Pending">Pending</option>
            <option value="Approved">Approved</option>
            <option value="Rejected">Rejected</option>
            <option value="Draft">Draft</option>
        </select>
    </div>
    <div class="col-md-2">
        <input type="date" class="form-control" name="createdFrom" placeholder="Created From" />
    </div>
    <div class="col-md-2">
        <input type="date" class="form-control" name="createdTo" placeholder="Created To" />
    </div>
    <div class="col-md-2 d-grid">
        <button type="submit" class="btn btn-outline-primary">Filter</button>
    </div>
</form>

<!-- Batch Actions -->
<div class="mb-2">
    <button class="btn btn-success btn-sm" id="batch-approve" disabled>Approve Selected</button>
    <button class="btn btn-danger btn-sm" id="batch-reject" disabled>Reject Selected</button>
</div>

<!-- Pending Properties Queue Table -->
<div class="table-responsive">
    <table class="table table-hover align-middle">
        <thead>
            <tr>
                <th><input type="checkbox" id="select-all" /></th>
                <th>ID</th>
                <th>Title</th>
                <th>User</th>
                <th>Status</th>
                <th>Created</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var property in Model.Properties)
            {
                <tr>
                    <td><input type="checkbox" class="select-property" value="@property.Id" /></td>
                    <td>@property.Id</td>
                    <td>@property.Title</td>
                    <td>@property.UserEmail</td>
                    <td>
                        <span class="badge bg-@GetStatusColor(property.Status)">@property.Status</span>
                    </td>
                    <td>@property.CreatedAt.ToShortDateString()</td>
                    <td>
                        <button type="button" class="btn btn-outline-info btn-sm" data-bs-toggle="modal" data-bs-target="#previewModal" data-id="@property.Id">Preview</button>
                        <a asp-page="./Details" asp-route-id="@property.Id" class="btn btn-info btn-sm">Details</a>
                        <a asp-page="./Approve" asp-route-id="@property.Id" class="btn btn-success btn-sm">Approve</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Quick Preview Modal -->
<div class="modal fade" id="previewModal" tabindex="-1" aria-labelledby="previewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="previewModalLabel">Property Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="preview-content">
                    <!-- AJAX-loaded property preview here -->
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Batch select logic
        document.getElementById('select-all').addEventListener('change', function() {
            document.querySelectorAll('.select-property').forEach(cb => cb.checked = this.checked);
            updateBatchButtons();
        });
        document.querySelectorAll('.select-property').forEach(cb => cb.addEventListener('change', updateBatchButtons));
        function updateBatchButtons() {
            const anyChecked = Array.from(document.querySelectorAll('.select-property')).some(cb => cb.checked);
            document.getElementById('batch-approve').disabled = !anyChecked;
            document.getElementById('batch-reject').disabled = !anyChecked;
        }
        // Quick preview AJAX logic (to be implemented)
        document.getElementById('previewModal').addEventListener('show.bs.modal', function (event) {
            var button = event.relatedTarget;
            var propertyId = button.getAttribute('data-id');
            // TODO: AJAX load preview for propertyId
        });
    </script>
    @functions {
        private string GetStatusColor(string status) => status switch {
            "Pending" => "warning",
            "Approved" => "success",
            "Rejected" => "danger",
            "Draft" => "secondary",
            _ => "info"
        };
        public class PropertyViewModel
        {
            public int Id { get; set; }
            public string Title { get; set; } = string.Empty;
            public string Status { get; set; } = string.Empty;
            public string UserEmail { get; set; } = string.Empty;
            public DateTime CreatedAt { get; set; }
        }
    }
}